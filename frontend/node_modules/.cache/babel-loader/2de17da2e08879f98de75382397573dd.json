{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SANKET TAVETHIYA\\\\Desktop\\\\MERN PRO\\\\frontend\\\\src\\\\component\\\\Admin\\\\UsersList.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport \"./productList.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport { Button } from \"@material-ui/core\";\nimport MetaData from \"../layout/MetaData\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SideBar from \"./Sidebar\";\nimport { getAllUsers, clearErrors, deleteUser } from \"../../actions/userAction\";\nimport { DELETE_USER_RESET } from \"../../constants/userConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersList = ({\n  history\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const {\n    error,\n    users\n  } = useSelector(state => state.allUsers);\n  const {\n    error: deleteError,\n    isDeleted,\n    message\n  } = useSelector(state => state.profile);\n  const deleteUserHandler = id => {\n    dispatch(deleteUser(id));\n  };\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors());\n    }\n    if (isDeleted) {\n      alert.success(message);\n      history.push(\"/admin/users\");\n      dispatch({\n        type: DELETE_USER_RESET\n      });\n    }\n    dispatch(getAllUsers());\n  }, [dispatch, alert, error, deleteError, history, isDeleted, message]);\n  const columns = [{\n    field: \"id\",\n    headerName: \"User ID\",\n    minWidth: 180,\n    flex: 0.8\n  }, {\n    field: \"email\",\n    headerName: \"Email\",\n    minWidth: 200,\n    flex: 1\n  }, {\n    field: \"name\",\n    headerName: \"Name\",\n    minWidth: 150,\n    flex: 0.5\n  }, {\n    field: \"role\",\n    headerName: \"Role\",\n    type: \"number\",\n    minWidth: 150,\n    flex: 0.3,\n    cellClassName: params => {\n      return params.getValue(params.id, \"role\") === \"admin\" ? \"greenColor\" : \"redColor\";\n    }\n  }, {\n    field: \"actions\",\n    flex: 0.3,\n    headerName: \"Actions\",\n    minWidth: 150,\n    type: \"number\",\n    sortable: false,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/admin/user/${params.getValue(params.id, \"id\")}`,\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => deleteUserHandler(params.getValue(params.id, \"id\")),\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n  const rows = [];\n  users && users.forEach(item => {\n    rows.push({\n      id: item._id,\n      role: item.role,\n      email: item.email,\n      name: item.name\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: `ALL USERS - Admin`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productListContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"productListHeading\",\n          children: \"ALL USERS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: rows,\n          columns: columns,\n          pageSize: 10,\n          disableSelectionOnClick: true,\n          className: \"productListTable\",\n          autoHeight: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(UsersList, \"lI/A1eCua6tsxO3nEuSaZtytpJI=\", false, function () {\n  return [useDispatch, useAlert, useSelector, useSelector];\n});\n_c = UsersList;\nexport default UsersList;\nvar _c;\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["React","Fragment","useEffect","DataGrid","useSelector","useDispatch","Link","useAlert","Button","MetaData","EditIcon","DeleteIcon","SideBar","getAllUsers","clearErrors","deleteUser","DELETE_USER_RESET","jsxDEV","_jsxDEV","UsersList","history","_s","dispatch","alert","error","users","state","allUsers","deleteError","isDeleted","message","profile","deleteUserHandler","id","success","push","type","columns","field","headerName","minWidth","flex","cellClassName","params","getValue","sortable","renderCell","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","rows","forEach","item","_id","role","email","name","title","className","pageSize","disableSelectionOnClick","autoHeight","_c","$RefreshReg$"],"sources":["C:/Users/SANKET TAVETHIYA/Desktop/MERN PRO/frontend/src/component/Admin/UsersList.js"],"sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport \"./productList.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport { Button } from \"@material-ui/core\";\nimport MetaData from \"../layout/MetaData\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SideBar from \"./Sidebar\";\nimport { getAllUsers, clearErrors, deleteUser } from \"../../actions/userAction\";\nimport { DELETE_USER_RESET } from \"../../constants/userConstants\";\n\nconst UsersList = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const alert = useAlert();\n\n  const { error, users } = useSelector((state) => state.allUsers);\n\n  const {\n    error: deleteError,\n    isDeleted,\n    message,\n  } = useSelector((state) => state.profile);\n\n  const deleteUserHandler = (id) => {\n    dispatch(deleteUser(id));\n  };\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success(message);\n      history.push(\"/admin/users\");\n      dispatch({ type: DELETE_USER_RESET });\n    }\n\n    dispatch(getAllUsers());\n  }, [dispatch, alert, error, deleteError, history, isDeleted, message]);\n\n  const columns = [\n    { field: \"id\", headerName: \"User ID\", minWidth: 180, flex: 0.8 },\n\n    {\n      field: \"email\",\n      headerName: \"Email\",\n      minWidth: 200,\n      flex: 1,\n    },\n    {\n      field: \"name\",\n      headerName: \"Name\",\n      minWidth: 150,\n      flex: 0.5,\n    },\n\n    {\n      field: \"role\",\n      headerName: \"Role\",\n      type: \"number\",\n      minWidth: 150,\n      flex: 0.3,\n      cellClassName: (params) => {\n        return params.getValue(params.id, \"role\") === \"admin\"\n          ? \"greenColor\"\n          : \"redColor\";\n      },\n    },\n\n    {\n      field: \"actions\",\n      flex: 0.3,\n      headerName: \"Actions\",\n      minWidth: 150,\n      type: \"number\",\n      sortable: false,\n      renderCell: (params) => {\n        return (\n          <Fragment>\n            <Link to={`/admin/user/${params.getValue(params.id, \"id\")}`}>\n              <EditIcon />\n            </Link>\n\n            <Button\n              onClick={() =>\n                deleteUserHandler(params.getValue(params.id, \"id\"))\n              }\n            >\n              <DeleteIcon />\n            </Button>\n          </Fragment>\n        );\n      },\n    },\n  ];\n\n  const rows = [];\n\n  users &&\n    users.forEach((item) => {\n      rows.push({\n        id: item._id,\n        role: item.role,\n        email: item.email,\n        name: item.name,\n      });\n    });\n\n  return (\n    <Fragment>\n      <MetaData title={`ALL USERS - Admin`} />\n\n      <div className=\"dashboard\">\n        <SideBar />\n        <div className=\"productListContainer\">\n          <h1 id=\"productListHeading\">ALL USERS</h1>\n\n          <DataGrid\n            rows={rows}\n            columns={columns}\n            pageSize={10}\n            disableSelectionOnClick\n            className=\"productListTable\"\n            autoHeight\n          />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default UsersList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}