{"ast":null,"code":"import { CREATE_ORDER_REQUEST, CREATE_ORDER_SUCCESS, CREATE_ORDER_FAIL, MY_ORDERS_REQUEST, MY_ORDERS_SUCCESS, MY_ORDERS_FAIL, ALL_ORDERS_REQUEST, ALL_ORDERS_SUCCESS, ALL_ORDERS_FAIL, UPDATE_ORDER_REQUEST, UPDATE_ORDER_SUCCESS, UPDATE_ORDER_FAIL, DELETE_ORDER_REQUEST, DELETE_ORDER_SUCCESS, DELETE_ORDER_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, CLEAR_ERRORS } from \"../constants/orderConstants\";\nimport axios from \"axios\";\n\n// Create Order\nexport const createOrder = order => async dispatch => {\n  try {\n    dispatch({\n      type: CREATE_ORDER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${process.env.STRIPE_SECRET_KEY}`\n      }\n    };\n    console.log(order);\n    const {\n      data\n    } = await axios.post(\"/api/v1/order/new\", order, config);\n    dispatch({\n      type: CREATE_ORDER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CREATE_ORDER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// My Orders\nexport const myOrders = () => async dispatch => {\n  try {\n    dispatch({\n      type: MY_ORDERS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/v1/orders/me\");\n    dispatch({\n      type: MY_ORDERS_SUCCESS,\n      payload: data.orders\n    });\n  } catch (error) {\n    dispatch({\n      type: MY_ORDERS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Get All Orders (admin)\nexport const getAllOrders = () => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_ORDERS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/v1/admin/orders\");\n    dispatch({\n      type: ALL_ORDERS_SUCCESS,\n      payload: data.orders\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_ORDERS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Update Order\nexport const updateOrder = (id, order) => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_ORDER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/admin/order/${id}`, order, config);\n    dispatch({\n      type: UPDATE_ORDER_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_ORDER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Delete Order\nexport const deleteOrder = id => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_ORDER_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/v1/admin/order/${id}`);\n    dispatch({\n      type: DELETE_ORDER_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_ORDER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Get Order Details\nexport const getOrderDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/order/${id}`);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data.order\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Clearing Errors\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","MY_ORDERS_FAIL","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_FAIL","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","CLEAR_ERRORS","axios","createOrder","order","dispatch","type","config","headers","process","env","STRIPE_SECRET_KEY","console","log","data","post","payload","error","response","message","myOrders","get","orders","getAllOrders","updateOrder","id","put","success","deleteOrder","delete","getOrderDetails","clearErrors"],"sources":["C:/Users/SANKET TAVETHIYA/Desktop/MERN PRO/frontend/src/actions/orderAction.js"],"sourcesContent":["import {\n  CREATE_ORDER_REQUEST,\n  CREATE_ORDER_SUCCESS,\n  CREATE_ORDER_FAIL,\n  MY_ORDERS_REQUEST,\n  MY_ORDERS_SUCCESS,\n  MY_ORDERS_FAIL,\n  ALL_ORDERS_REQUEST,\n  ALL_ORDERS_SUCCESS,\n  ALL_ORDERS_FAIL,\n  UPDATE_ORDER_REQUEST,\n  UPDATE_ORDER_SUCCESS,\n  UPDATE_ORDER_FAIL,\n  DELETE_ORDER_REQUEST,\n  DELETE_ORDER_SUCCESS,\n  DELETE_ORDER_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  CLEAR_ERRORS,\n} from \"../constants/orderConstants\";\n\nimport axios from \"axios\";\n\n// Create Order\nexport const createOrder = (order) => async (dispatch) => {\n  try {\n    dispatch({ type: CREATE_ORDER_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${process.env.STRIPE_SECRET_KEY}`,\n\n      },\n    };\n    console.log(order);\n    const { data } = await axios.post(\"/api/v1/order/new\", order, config);\n\n    dispatch({ type: CREATE_ORDER_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: CREATE_ORDER_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// My Orders\nexport const myOrders = () => async (dispatch) => {\n  try {\n    dispatch({ type: MY_ORDERS_REQUEST });\n\n    const { data } = await axios.get(\"/api/v1/orders/me\");\n\n    dispatch({ type: MY_ORDERS_SUCCESS, payload: data.orders });\n  } catch (error) {\n    dispatch({\n      type: MY_ORDERS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Get All Orders (admin)\nexport const getAllOrders = () => async (dispatch) => {\n  try {\n    dispatch({ type: ALL_ORDERS_REQUEST });\n\n    const { data } = await axios.get(\"/api/v1/admin/orders\");\n\n    dispatch({ type: ALL_ORDERS_SUCCESS, payload: data.orders });\n  } catch (error) {\n    dispatch({\n      type: ALL_ORDERS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Update Order\nexport const updateOrder = (id, order) => async (dispatch) => {\n  try {\n    dispatch({ type: UPDATE_ORDER_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const { data } = await axios.put(\n      `/api/v1/admin/order/${id}`,\n      order,\n      config\n    );\n\n    dispatch({ type: UPDATE_ORDER_SUCCESS, payload: data.success });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_ORDER_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Delete Order\nexport const deleteOrder = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: DELETE_ORDER_REQUEST });\n\n    const { data } = await axios.delete(`/api/v1/admin/order/${id}`);\n\n    dispatch({ type: DELETE_ORDER_SUCCESS, payload: data.success });\n  } catch (error) {\n    dispatch({\n      type: DELETE_ORDER_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Get Order Details\nexport const getOrderDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: ORDER_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/v1/order/${id}`);\n\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data.order });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Clearing Errors\nexport const clearErrors = () => async (dispatch) => {\n  dispatch({ type: CLEAR_ERRORS });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}