{"ast":null,"code":"import React,{Fragment,useState,useEffect}from\"react\";import\"./UpdatePassword.css\";import Loader from\"../layout/Loader/Loader\";import{useDispatch,useSelector}from\"react-redux\";import{clearErrors,updatePassword}from\"../../actions/userAction\";import{useAlert}from\"react-alert\";import{UPDATE_PASSWORD_RESET}from\"../../constants/userConstants\";import MetaData from\"../layout/MetaData\";import LockOpenIcon from\"@material-ui/icons/LockOpen\";import LockIcon from\"@material-ui/icons/Lock\";import VpnKeyIcon from\"@material-ui/icons/VpnKey\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UpdatePassword=_ref=>{let{history}=_ref;const dispatch=useDispatch();const alert=useAlert();const{error,isUpdated,loading}=useSelector(state=>state.profile);const[oldPassword,setOldPassword]=useState(\"\");const[newPassword,setNewPassword]=useState(\"\");const[confirmPassword,setConfirmPassword]=useState(\"\");const updatePasswordSubmit=e=>{e.preventDefault();const myForm=new FormData();myForm.set(\"oldPassword\",oldPassword);myForm.set(\"newPassword\",newPassword);myForm.set(\"confirmPassword\",confirmPassword);dispatch(updatePassword(myForm));};useEffect(()=>{if(error){alert.error(error);dispatch(clearErrors());}if(isUpdated){alert.success(\"Profile Updated Successfully\");history.push(\"/account\");dispatch({type:UPDATE_PASSWORD_RESET});}},[dispatch,error,alert,history,isUpdated]);return/*#__PURE__*/_jsx(Fragment,{children:loading?/*#__PURE__*/_jsx(Loader,{}):/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(MetaData,{title:\"Change Password\"}),/*#__PURE__*/_jsx(\"div\",{className:\"updatePasswordContainer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"updatePasswordBox\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"updatePasswordHeading\",children:\"Update Profile\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"updatePasswordForm\",onSubmit:updatePasswordSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"loginPassword\",children:[/*#__PURE__*/_jsx(VpnKeyIcon,{}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Old Password\",required:true,value:oldPassword,onChange:e=>setOldPassword(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"loginPassword\",children:[/*#__PURE__*/_jsx(LockOpenIcon,{}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"New Password\",required:true,value:newPassword,onChange:e=>setNewPassword(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"loginPassword\",children:[/*#__PURE__*/_jsx(LockIcon,{}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Confirm Password\",required:true,value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value)})]}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Change\",className:\"updatePasswordBtn\"})]})]})})]})});};export default UpdatePassword;","map":{"version":3,"names":["React","Fragment","useState","useEffect","Loader","useDispatch","useSelector","clearErrors","updatePassword","useAlert","UPDATE_PASSWORD_RESET","MetaData","LockOpenIcon","LockIcon","VpnKeyIcon","jsx","_jsx","jsxs","_jsxs","UpdatePassword","_ref","history","dispatch","alert","error","isUpdated","loading","state","profile","oldPassword","setOldPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","updatePasswordSubmit","e","preventDefault","myForm","FormData","set","success","push","type","children","title","className","onSubmit","placeholder","required","value","onChange","target"],"sources":["C:/Users/SANKET TAVETHIYA/Desktop/MERN PRO/frontend/src/component/User/UpdatePassword.js"],"sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport \"./UpdatePassword.css\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearErrors, updatePassword } from \"../../actions/userAction\";\nimport { useAlert } from \"react-alert\";\nimport { UPDATE_PASSWORD_RESET } from \"../../constants/userConstants\";\nimport MetaData from \"../layout/MetaData\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\n\nconst UpdatePassword = ({ history }) => {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  const { error, isUpdated, loading } = useSelector((state) => state.profile);\n\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const updatePasswordSubmit = (e) => {\n    e.preventDefault();\n\n    const myForm = new FormData();\n\n    myForm.set(\"oldPassword\", oldPassword);\n    myForm.set(\"newPassword\", newPassword);\n    myForm.set(\"confirmPassword\", confirmPassword);\n\n    dispatch(updatePassword(myForm));\n  };\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      alert.success(\"Profile Updated Successfully\");\n\n      history.push(\"/account\");\n\n      dispatch({\n        type: UPDATE_PASSWORD_RESET,\n      });\n    }\n  }, [dispatch, error, alert, history, isUpdated]);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <MetaData title=\"Change Password\" />\n          <div className=\"updatePasswordContainer\">\n            <div className=\"updatePasswordBox\">\n              <h2 className=\"updatePasswordHeading\">Update Profile</h2>\n\n              <form\n                className=\"updatePasswordForm\"\n                onSubmit={updatePasswordSubmit}\n              >\n                <div className=\"loginPassword\">\n                  <VpnKeyIcon />\n                  <input\n                    type=\"password\"\n                    placeholder=\"Old Password\"\n                    required\n                    value={oldPassword}\n                    onChange={(e) => setOldPassword(e.target.value)}\n                  />\n                </div>\n\n                <div className=\"loginPassword\">\n                  <LockOpenIcon />\n                  <input\n                    type=\"password\"\n                    placeholder=\"New Password\"\n                    required\n                    value={newPassword}\n                    onChange={(e) => setNewPassword(e.target.value)}\n                  />\n                </div>\n                <div className=\"loginPassword\">\n                  <LockIcon />\n                  <input\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    required\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                  />\n                </div>\n                <input\n                  type=\"submit\"\n                  value=\"Change\"\n                  className=\"updatePasswordBtn\"\n                />\n              </form>\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default UpdatePassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}