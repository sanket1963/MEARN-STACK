{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SANKET TAVETHIYA\\\\Desktop\\\\MERN PRO\\\\frontend\\\\src\\\\component\\\\Admin\\\\OrderList.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport \"./productList.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport { Button } from \"@material-ui/core\";\nimport MetaData from \"../layout/MetaData\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SideBar from \"./Sidebar\";\nimport { deleteOrder, getAllOrders, clearErrors } from \"../../actions/orderAction\";\nimport { DELETE_ORDER_RESET } from \"../../constants/orderConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderList = ({\n  history\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const {\n    error,\n    orders\n  } = useSelector(state => state.allOrders);\n  const {\n    error: deleteError,\n    isDeleted\n  } = useSelector(state => state.order);\n  const deleteOrderHandler = id => {\n    dispatch(deleteOrder(id));\n  };\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors());\n    }\n    if (isDeleted) {\n      alert.success(\"Order Deleted Successfully\");\n      history.push(\"/admin/orders\");\n      dispatch({\n        type: DELETE_ORDER_RESET\n      });\n    }\n    dispatch(getAllOrders());\n  }, [dispatch, alert, error, deleteError, history, isDeleted]);\n  const columns = [{\n    field: \"id\",\n    headerName: \"Order ID\",\n    minWidth: 300,\n    flex: 1\n  }, {\n    field: \"status\",\n    headerName: \"Status\",\n    minWidth: 150,\n    flex: 0.5,\n    cellClassName: params => {\n      return params.getValue(params.id, \"status\") === \"Delivered\" ? \"greenColor\" : \"redColor\";\n    }\n  }, {\n    field: \"itemsQty\",\n    headerName: \"Items Qty\",\n    type: \"number\",\n    minWidth: 150,\n    flex: 0.4\n  }, {\n    field: \"amount\",\n    headerName: \"Amount\",\n    type: \"number\",\n    minWidth: 270,\n    flex: 0.5\n  }, {\n    field: \"actions\",\n    flex: 0.3,\n    headerName: \"Actions\",\n    minWidth: 150,\n    type: \"number\",\n    sortable: false,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/admin/order/${params.getValue(params.id, \"id\")}`,\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => deleteOrderHandler(params.getValue(params.id, \"id\")),\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n  const rows = [];\n  orders && orders.forEach(item => {\n    rows.push({\n      id: item._id,\n      itemsQty: item.orderItems.length,\n      amount: item.totalPrice,\n      status: item.orderStatus\n    });\n  });\n  console.log(amount);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: `ALL ORDERS - Admin`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productListContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"productListHeading\",\n          children: \"ALL ORDERS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: rows,\n          columns: columns,\n          pageSize: 10,\n          disableSelectionOnClick: true,\n          className: \"productListTable\",\n          autoHeight: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderList, \"lE+J41SEfZ7Okr4q+rJkL6fui6A=\", false, function () {\n  return [useDispatch, useAlert, useSelector, useSelector];\n});\n_c = OrderList;\nexport default OrderList;\nvar _c;\n$RefreshReg$(_c, \"OrderList\");","map":{"version":3,"names":["React","Fragment","useEffect","DataGrid","useSelector","useDispatch","Link","useAlert","Button","MetaData","EditIcon","DeleteIcon","SideBar","deleteOrder","getAllOrders","clearErrors","DELETE_ORDER_RESET","jsxDEV","_jsxDEV","OrderList","history","_s","dispatch","alert","error","orders","state","allOrders","deleteError","isDeleted","order","deleteOrderHandler","id","success","push","type","columns","field","headerName","minWidth","flex","cellClassName","params","getValue","sortable","renderCell","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","rows","forEach","item","_id","itemsQty","orderItems","length","amount","totalPrice","status","orderStatus","console","log","title","className","pageSize","disableSelectionOnClick","autoHeight","_c","$RefreshReg$"],"sources":["C:/Users/SANKET TAVETHIYA/Desktop/MERN PRO/frontend/src/component/Admin/OrderList.js"],"sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport \"./productList.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport { Button } from \"@material-ui/core\";\nimport MetaData from \"../layout/MetaData\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SideBar from \"./Sidebar\";\nimport {\n  deleteOrder,\n  getAllOrders,\n  clearErrors,\n} from \"../../actions/orderAction\";\nimport { DELETE_ORDER_RESET } from \"../../constants/orderConstants\";\n\nconst OrderList = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const alert = useAlert();\n\n  const { error, orders } = useSelector((state) => state.allOrders);\n\n  const { error: deleteError, isDeleted } = useSelector((state) => state.order);\n\n  const deleteOrderHandler = (id) => {\n    dispatch(deleteOrder(id));\n  };\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success(\"Order Deleted Successfully\");\n      history.push(\"/admin/orders\");\n      dispatch({ type: DELETE_ORDER_RESET });\n    }\n\n    dispatch(getAllOrders());\n  }, [dispatch, alert, error, deleteError, history, isDeleted]);\n\n  const columns = [\n    { field: \"id\", headerName: \"Order ID\", minWidth: 300, flex: 1 },\n\n    {\n      field: \"status\",\n      headerName: \"Status\",\n      minWidth: 150,\n      flex: 0.5,\n      cellClassName: (params) => {\n        return params.getValue(params.id, \"status\") === \"Delivered\"\n          ? \"greenColor\"\n          : \"redColor\";\n      },\n    },\n    {\n      field: \"itemsQty\",\n      headerName: \"Items Qty\",\n      type: \"number\",\n      minWidth: 150,\n      flex: 0.4,\n    },\n\n    {\n      field: \"amount\",\n      headerName: \"Amount\",\n      type: \"number\",\n      minWidth: 270,\n      flex: 0.5,\n    },\n\n    {\n      field: \"actions\",\n      flex: 0.3,\n      headerName: \"Actions\",\n      minWidth: 150,\n      type: \"number\",\n      sortable: false,\n      renderCell: (params) => {\n        return (\n          <Fragment>\n            <Link to={`/admin/order/${params.getValue(params.id, \"id\")}`}>\n              <EditIcon />\n            </Link>\n\n            <Button\n              onClick={() =>\n                deleteOrderHandler(params.getValue(params.id, \"id\"))\n              }\n            >\n              <DeleteIcon />\n            </Button>\n          </Fragment>\n        );\n      },\n    },\n  ];\n\n  const rows = [];\n\n  orders &&\n    orders.forEach((item) => {\n      rows.push({\n        id: item._id,\n        itemsQty: item.orderItems.length,\n        amount: item.totalPrice,\n        status: item.orderStatus,\n      });\n    });\n\n    console.log(amount)\n\n  return (\n    <Fragment>\n      <MetaData title={`ALL ORDERS - Admin`} />\n\n      <div className=\"dashboard\">\n        <SideBar />\n        <div className=\"productListContainer\">\n          <h1 id=\"productListHeading\">ALL ORDERS</h1>\n\n          <DataGrid\n            rows={rows}\n            columns={columns}\n            pageSize={10}\n            disableSelectionOnClick\n            className=\"productListTable\"\n            autoHeight\n          />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default OrderList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}